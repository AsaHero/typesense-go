// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/v-byte-cpu/typesense-go/typesense/api/circuit (interfaces: CircuitBreaker)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCircuitBreaker is a mock of CircuitBreaker interface
type MockCircuitBreaker struct {
	ctrl     *gomock.Controller
	recorder *MockCircuitBreakerMockRecorder
}

// MockCircuitBreakerMockRecorder is the mock recorder for MockCircuitBreaker
type MockCircuitBreakerMockRecorder struct {
	mock *MockCircuitBreaker
}

// NewMockCircuitBreaker creates a new mock instance
func NewMockCircuitBreaker(ctrl *gomock.Controller) *MockCircuitBreaker {
	mock := &MockCircuitBreaker{ctrl: ctrl}
	mock.recorder = &MockCircuitBreakerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCircuitBreaker) EXPECT() *MockCircuitBreakerMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockCircuitBreaker) Execute(arg0 func() error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute
func (mr *MockCircuitBreakerMockRecorder) Execute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockCircuitBreaker)(nil).Execute), arg0)
}
